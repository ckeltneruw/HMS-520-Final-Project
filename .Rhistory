# now limit to people who are eligible for medicare across all three years
dt <- reshape(dt, idvar = "DESYNPUF_ID", timevar = "file", direction = "wide")
View(dt)
dt[is.na(dt)] <- 0
dt[, n_eligible := eligible.2008 + eligible.2009 + eligible.2010]
dt <- dt[n_eligible == 3, ]
# keep only the patient IDs
dt <- dt[, 'DESYNPUF_ID']
View(dt)
# Claims from SEGMENT =1
ipt0810 <- ipt0810[SEGMENT==1, ]
ipt0810 <- ipt0810[(ICD9_PRCDR_CD_1 %like% '^967'|
ICD9_PRCDR_CD_2 %like% '^967'|
ICD9_PRCDR_CD_3 %like% '^967'|
ICD9_PRCDR_CD_4 %like% '^967'|
ICD9_PRCDR_CD_5 %like% '^967'|
ICD9_PRCDR_CD_6 %like% '^967'), icd9_imv := 1]
ipt0810 <- fread(paste0(file_path, "IPT2008_2010.csv"))
# Claims from SEGMENT =1
ipt0810 <- ipt0810[SEGMENT==1, ]
ipt0810 <- ipt0810[(ICD9_PRCDR_CD_1 %like% '^967'|
ICD9_PRCDR_CD_2 %like% '^967'|
ICD9_PRCDR_CD_3 %like% '^967'|
ICD9_PRCDR_CD_4 %like% '^967'|
ICD9_PRCDR_CD_5 %like% '^967'|
ICD9_PRCDR_CD_6 %like% '^967'), ]
# Merge dataset
final <- merge(dt, ipt0810, by = "DESYNPUF_ID", all.x = TRUE)
# Create a total reimbursed cost variable (claimpayment + perdiemrate*inpatientdays)
final[, tot_reimbursement := (CLM_PMT_AMT + CLM_PASS_THRU_PER_DIEM_AMT*CLM_UTLZTN_DAY_CNT)]
# subset the dataset
final <- final[, c('DESYNPUF_ID', 'CLM_ID', 'CLM_FROM_DT', 'tot_reimbursement')]
# Renames the columns
setnames(final, old = c('DESYNPUF_ID', 'CLM_ID', 'CLM_FROM_DT'), new = c("patient_id", "claim_id", "claim_date"))
# fix the date format
final[, claim_date := ymd(claim_date)]
View(final)
final
(39-29)+(170-3)
(12-8) + (191-4)
177+32
191+12
(32/209)/(12/203)
170+191
([(29*12)/51+(3*191)/361])/([(8*39)/51+(4*170)/361])
(((29*12)/51+(3*191)/361)/(((8*39)/51+(4*170)/361))
)
(71/95691)/(26/37046)
68438+22891
27253+14155
(((18*22891)/91329+(53*14155)/41408)/(((10*68438)/91329+(17*27253)/41408)))
(18/68438)/(10/22891)
(53/27253)/(17/14155)
(18/68438) - (10/22891)
(53/27253) - (17/14155)
-0.0001738411*100,000
-0.0001738411*100000
(((202*7.1)/20+(86*10.3)/17.6))/(((66*12.9)/20+(72*7.3)/17.6)))
(((202*7.1)/20+(86*10.3)/17.6))/((66*12.9)/20+(72*7.3)/17.6)))
(((202*7.1)/20+(86*10.3)/17.6))/((66*12.9)/20+(72*7.3)/17.6)))
(((202*7.1)/20+(86*10.3)/17.6))/((66*12.9)/20+(72*7.3)/17.6))
(((202*7.1)/20+(86*10.3)/17.6))/(((66*12.9)/20+(72*7.3)/17.6))
(202*7.1)/20+(86*10.3)/17.6)
(202*7.1)/20+(86*10.3)/17.6
(66*12.9)/20+(72*7.3)/17.6
122.0395/72.43364
## EMPTY THE ENVIRONMENT
rm(list = ls())
## LOAD PACKAGES
pacman::p_load(data.table, lubridate)
library(dplyr)
library(tidyverse)
library(expss)
library(gmodels)
library(crosstable)
library(pander)
# IMPORT DATASET
load("C:/1.First year PhD/1. Fall quarter/HSERV 523/final/Final2022.Rdata")
dt <- data.table(finaldata)
dt[CLASS == 1, class_cat := "Freshman"]
dt[CLASS == 2, class_cat := "Sophomore"]
dt[CLASS == 3, class_cat := "Junior"]
dt[CLASS == 4, class_cat := "Senior"]
dt[CLASS == 5, class_cat := "5th year"]
dt[CLASS == 6, class_cat := "Grad students"]
column_names <- names(dt)
setnames(dt, column_names, tolower(column_names))
dt = apply_labels(dt,
hsubinge = c("No" = 0,
"Yes" = 1),
binge = c("No" = 0,
"Yes" = 1),
fsjoin =  c("No" = 0,
"Yes" = 1),
race = c("White" = 1,
"African American" = 2,
"Asian/PI" = 3,
"NatAm/Other" = 4))
dt[race == 1, race_cat := "White"]
View(dt)
load("C:/1.First year PhD/1. Fall quarter/HSERV 523/final/Final2022.Rdata")
dt <- data.table(finaldata)
dt[CLASS == 1, class_cat := "Freshman"]
dt[CLASS == 2, class_cat := "Sophomore"]
dt[CLASS == 3, class_cat := "Junior"]
dt[CLASS == 4, class_cat := "Senior"]
dt[CLASS == 5, class_cat := "5th year"]
dt[CLASS == 6, class_cat := "Grad students"]
write.csv(dt, "C:/1.First year PhD/1. Fall quarter/HSERV 523/final/test.csv")
dt2 <- fread("test.csv")
column_names <- names(dt)
setnames(dt, column_names, tolower(column_names))
write.csv(dt, "C:/1.First year PhD/1. Fall quarter/HSERV 523/final/test.csv")
final <- fread("test.csv")
final <- test <- read_csv("C:/1.First year PhD/1. Fall quarter/HSERV 523/final/test.csv")
View(test)
dt <- test <- read_csv("C:/1.First year PhD/1. Fall quarter/HSERV 523/final/test.csv")
dt = apply_labels(dt,
hsubinge = c("No" = 0,
"Yes" = 1),
binge = c("No" = 0,
"Yes" = 1),
fsjoin =  c("No" = 0,
"Yes" = 1),
race = c("White" = 1,
"African American" = 2,
"Asian/PI" = 3,
"NatAm/Other" = 4))
dt[race == 1, race_cat := "White"]
dt$race
table(dt$race)
dt[race ==1]
dt <- data.table(dt)
dt
dt[race ==1]
dt[race == 1, race_cat := "White"]
dt[race == 2, race_cat := "African American"]
dt[race == 3, race_cat := "Asian/PI"]
dt[race == 4, race_cat := "NatAm/Other"]
label(dt[["race_cat"]]) <- "Race/Ethnicity"
label(dt[["fsjoin"]]) <- "fraternity or sorority member"
pacman::p_load(data.table, lubridate)
library(dplyr)
library(tidyverse)
library(expss)
library(gmodels)
library(crosstable)
library(pander)
label(dt[["race_cat"]]) <- "Race/Ethnicity"
load("C:/1.First year PhD/1. Fall quarter/HSERV 523/final/Final2022.Rdata")
dt <- data.table(finaldata)
dt[CLASS == 1, class_cat := "Freshman"]
dt[CLASS == 2, class_cat := "Sophomore"]
dt[CLASS == 3, class_cat := "Junior"]
dt[CLASS == 4, class_cat := "Senior"]
dt[CLASS == 5, class_cat := "5th year"]
dt[CLASS == 6, class_cat := "Grad students"]
column_names <- names(dt)
setnames(dt, column_names, tolower(column_names))
#write.csv(dt, "C:/1.First year PhD/1. Fall quarter/HSERV 523/final/test.csv")
#dt <- test <- read_csv("C:/1.First year PhD/1. Fall quarter/HSERV 523/final/test.csv")
dt = apply_labels(dt,
hsubinge = c("No" = 0,
"Yes" = 1),
binge = c("No" = 0,
"Yes" = 1),
fsjoin =  c("No" = 0,
"Yes" = 1),
race = c("White" = 1,
"African American" = 2,
"Asian/PI" = 3,
"NatAm/Other" = 4))
dt <- data.table(dt)
dt[race == 1, race_cat := "White"]
dt[race == 2, race_cat := "African American"]
dt[race == 3, race_cat := "Asian/PI"]
dt[race == 4, race_cat := "NatAm/Other"]
label(dt[["race_cat"]]) <- "Race/Ethnicity"
??lable
library(Hmisc)
label(dt[["race_cat"]]) <- "Race/Ethnicity"
label(dt[["fsjoin"]]) <- "fraternity or sorority member"
label(dt[["class_cat"]]) <- "Year in college "
# Question 2a
CrossTable(dt$hsubinge,
dt$binge,
dnn = c("Binge drinking in high school",
"Binge drinking in college"),
prop.chisq = FALSE, #Remove chi-square contribution of each cell
prop.t = FALSE, #Remove table proportions
prop.c = FALSE) #Remove column proportions
dt[(binge == 1 & hsubinge == 0), adopted_drinker := 1]
dt[is.na(adopted_drinker), adopted_drinker := 0]
dt = apply_labels(dt,adopted_drinker = c("No" = 0, "Yes" = 1))
label(dt[["adopted_drinker"]]) <- "Adopted binge drinking in college"
dt[(binge == 1 & hsubinge == 0), adopted_drinker := 1]
# Question 2a
CrossTable(dt$hsubinge,
dt$binge,
dnn = c("Binge drinking in high school",
"Binge drinking in college"),
prop.chisq = FALSE, #Remove chi-square contribution of each cell
prop.t = FALSE, #Remove table proportions
prop.c = FALSE) #Remove column proportions
names(dt)
dt$binge
table(dt$binge)
dt[binge ==1]
dt <- data.table(dt)
dt[(binge == 1 & hsubinge == 0), adopted_drinker := 1]
dt[(binge == 1 & hsubinge == 0), adopted_drinker := 1]
# SAVE CLEAN DATA FOR THE NEXT ANALYSIS
save(clean_dt, file = "C:/1.First year PhD/1. Fall quarter/HMS 520/HMS-520-Final-Project/clean_data.RData")
## EMPTY THE ENVIRONMENT
rm(list = ls())
# LOAD PACKAGES
library(data.table)
library(haven)
library(expss)
# SET YOUR WORKING DIRECTORY
setwd("Fill your filepath here")
setwd("C:/1.First year PhD/1. Fall quarter/HMS 520/HMS-520-Final-Project")
# READ IN THE SUBSET DATAFILE
final <- fread("brfss2021.csv")
final[, V1 := NULL]
##############################################################################################################
##                                            CLEANING DATA FILE                                            ##
##############################################################################################################
# RENAME VARIABLES
old_names <- c("_state", "_age_g", "_racegr3", "_educag", "_incomg1", "_sex",
"marital", "flushot7", "genhlth", "_hlthpln", "persdoc3",
"medcost1", "checkup1", "_rfsmok3", "_rfbing5", "_urbstat",
"_asthms1")
new_names <- c("state", "age", "race", "education", "income", "sex",'marital_status',
"flushot","health_status", "insurance", "mul_doc", "not_see_doc",
"checkup", "smoke", "alcohol", "urban_rural", "asthma_status")
setnames(final, old=old_names, new=new_names)
# RECODE MISSING VALUES
code_9 <- c("race", "income", "education", "marital_status", "flushot", "health_status",
"insurance", "mul_doc", "not_see_doc", "checkup", "smoke", "alcohol",
"asthma_status")
code_7 <- c( "flushot", "health_status", "mul_doc","not_see_doc", "checkup")
col_names <- names(final)
for (x in col_names) {
if (x %in% code_9) {
final[get(x) == 9, (x) := NA]
}
}
for (x in col_names) {
if (x %in% code_7) {
final[get(x) == 7, (x) := NA]
}
}
# CREATE A NEW VARIABLE: REGION
northeast = c(9, 23, 25, 33, 34, 36, 42, 44, 50)
midwest = c(18, 17, 26, 39, 55, 19, 20, 27, 29, 31, 38, 46)
south = c(10, 11, 12, 13, 24, 37, 45, 51, 54, 1, 21, 28, 47, 5, 22, 40, 48)
west = c(4, 8, 16, 35, 30, 49, 32, 56, 2, 6, 15, 41, 53)
states <- unique(final$state)
final$region <- "a"
for (i in states){
if (i %in% northeast){
final[state == i, region := "Northeast"]
} else if (i %in% midwest){
final[state == i, region :=  "Midwest"]
} else if (i %in% south){
final[state == i, region :=  "South"]
} else if (i %in% west){
final[state == i, region :=  "West"]
}
}
final[region =="a", region := NA]
final<- final[complete.cases(final)]
# LABEL VARIABLES
clean_dt = apply_labels(final,
age = c("18-24" = 1,
"25-34" = 2,
"35-44" = 3,
"45-54" = 4,
"55-64" = 5,
"65+"   = 6),
race = c("White American" = 1,
"Black American" = 2,
"Other races"    = 3,
"Multiracial"    = 4,
"Hispanic"       = 5),
education = c("Less than high school" = 1,
"High school"           = 2,
"Some college"          = 3,
"College graduate"      = 4),
income = c("<$15,000"          = 1,
"$15,000-$24,999"   = 2,
"$25,000-$34,999"   = 3,
"$35,000-$49,999"   = 4,
"$50,000-$99,999"   = 5,
"$100,000-$199,999" = 6,
"$200,000+"         = 7),
sex = c("Male"    = 1,
"Female"  = 2),
flushot = c("Yes" = 1,
"No"  = 2),
health_status = c("Excellent" = 1,
"Very good" = 2,
"Good"      = 3,
"Fair"      = 4,
"Poor"      = 5),
insurance = c("Yes" = 1,
"No"  = 2),
mul_doc = c("Only one"      = 1,
"More than one" = 2,
"No"            = 3),
checkup = c("Within past year"    = 1,
"Within past 2 years" = 2,
"Within past 5 years" = 3,
"5 or more years ago" = 4,
"Never"               = 8),
marital_status = c("Married"          = 1,
"Divorced"         = 2,
"Widowed"          = 3,
"Separated"        = 4,
"Never married"    = 5,
"Unmarried couple" = 6),
smoke = c("No"    = 1,
"Yes"   = 2),
alcohol = c("No"  = 1,
"Yes" = 2),
not_see_doc = c("Yes" = 1,
"No"  = 2),
urban_rural = c("Urban counties" = 1,
"Rural counties" = 2),
asthma_status = c("Current" = 1,
"Former"  = 2,
"Never"   = 3))
# SAVE CLEAN DATA FOR THE NEXT ANALYSIS
save(clean_dt, file = "C:/1.First year PhD/1. Fall quarter/HMS 520/HMS-520-Final-Project/clean_data.RData")
# SET WORKING DIRECTORY
setwd("C:/1.First year PhD/1. Fall quarter/HMS 520/HMS-520-Final-Project")
# READ IN THE SUBSET DATAFILE
final <- fread("brfss2021.csv")
final[, V1 := NULL]
# RENAME VARIABLES
old_names <- c("_state", "_age_g", "_racegr3", "_educag", "_incomg1", "_sex",
"marital", "flushot7", "genhlth", "_hlthpln", "persdoc3",
"medcost1", "checkup1", "_rfsmok3", "_rfbing5", "_urbstat",
"_asthms1")
new_names <- c("state", "age", "race", "education", "income", "sex",'marital_status',
"flushot","health_status", "insurance", "mul_doc", "not_see_doc",
"checkup", "smoke", "alcohol", "urban_rural", "asthma_status")
setnames(final, old=old_names, new=new_names)
code_9 <- c("race", "income", "education", "marital_status", "flushot", "health_status",
"insurance", "mul_doc", "not_see_doc", "checkup", "smoke", "alcohol",
"asthma_status")
code_7 <- c( "flushot", "health_status", "mul_doc","not_see_doc", "checkup")
col_names <- names(final)
for (x in col_names) {
if (x %in% code_9) {
final[get(x) == 9, (x) := NA]
}
}
for (x in col_names) {
if (x %in% code_7) {
final[get(x) == 7, (x) := NA]
}
}
northeast = c(9, 23, 25, 33, 34, 36, 42, 44, 50)
midwest = c(18, 17, 26, 39, 55, 19, 20, 27, 29, 31, 38, 46)
south = c(10, 11, 12, 13, 24, 37, 45, 51, 54, 1, 21, 28, 47, 5, 22, 40, 48)
west = c(4, 8, 16, 35, 30, 49, 32, 56, 2, 6, 15, 41, 53)
states <- unique(final$state)
final$region <- "a"
for (i in states){
if (i %in% northeast){
final[state == i, region := "Northeast"]
} else if (i %in% midwest){
final[state == i, region :=  "Midwest"]
} else if (i %in% south){
final[state == i, region :=  "South"]
} else if (i %in% west){
final[state == i, region :=  "West"]
}
}
final[region =="a", region := NA]
final<- final[complete.cases(final)]
# LABEL VARIABLES
clean_dt = apply_labels(final,
age = c("18-24" = 1,
"25-34" = 2,
"35-44" = 3,
"45-54" = 4,
"55-64" = 5,
"65+"   = 6),
race = c("White American" = 1,
"Black American" = 2,
"Other races"    = 3,
"Multiracial"    = 4,
"Hispanic"       = 5),
education = c("Less than high school" = 1,
"High school"           = 2,
"Some college"          = 3,
"College graduate"      = 4),
income = c("<$15,000"          = 1,
"$15,000-$24,999"   = 2,
"$25,000-$34,999"   = 3,
"$35,000-$49,999"   = 4,
"$50,000-$99,999"   = 5,
"$100,000-$199,999" = 6,
"$200,000+"         = 7),
sex = c("Male"    = 1,
"Female"  = 2),
flushot = c("Yes" = 1,
"No"  = 2),
health_status = c("Excellent" = 1,
"Very good" = 2,
"Good"      = 3,
"Fair"      = 4,
"Poor"      = 5),
insurance = c("Yes" = 1,
"No"  = 2),
mul_doc = c("Only one"      = 1,
"More than one" = 2,
"No"            = 3),
checkup = c("Within past year"    = 1,
"Within past 2 years" = 2,
"Within past 5 years" = 3,
"5 or more years ago" = 4,
"Never"               = 8),
marital_status = c("Married"          = 1,
"Divorced"         = 2,
"Widowed"          = 3,
"Separated"        = 4,
"Never married"    = 5,
"Unmarried couple" = 6),
smoke = c("No"    = 1,
"Yes"   = 2),
alcohol = c("No"  = 1,
"Yes" = 2),
not_see_doc = c("Yes" = 1,
"No"  = 2),
urban_rural = c("Urban counties" = 1,
"Rural counties" = 2),
asthma_status = c("Current" = 1,
"Former"  = 2,
"Never"   = 3))
## EMPTY THE ENVIRONMENT
rm(list = ls())
# LOAD PACKAGES
library(data.table)
library(ggplot2)
library(haven)
library(expss)
library(glmnet)
library(boot)
library(pander)
# SET WORKING DIRECTORY
setwd("C:/1.First year PhD/1. Fall quarter/HMS 520/HMS-520-Final-Project")
# IMPORT DATA
load("clean_data.Rdata")
cross_cases(clean_dt, region, flushot) # distribution
cross_rpct(clean_dt, region, flushot) # row percent
plots <- ggplot(clean_dt, aes(x= flushot,  group=income)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(x = paste0("Income"), y = "Percent", fill="Received Flu Shot") +
ggtitle(paste0("Vaccination Coverage by Income in 2021")) +
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"), # adjust the plot title to the center and adjust font
axis.text.x=element_blank()) + # Remove X axis ticks
facet_grid(~income) +
scale_y_continuous(labels = scales::percent)+
scale_fill_discrete(labels=c('Yes', 'No')) # change legend values' names
ggplot(clean_dt, aes(x= flushot,  group=income)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(x = paste0("Income"), y = "Percent", fill="Received Flu Shot") +
ggtitle(paste0("Vaccination Coverage by Income in 2021")) +
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"), # adjust the plot title to the center and adjust font
axis.text.x=element_blank()) + # Remove X axis ticks
facet_grid(~income) +
scale_y_continuous(labels = scales::percent)+
scale_fill_discrete(labels=c('Yes', 'No'))
# Treating covariates as continuous variables
mod1 <- glm(data = clean_dt, flushot~.)
summary(mod1)
pander(mod1) # make a nice table for the coefficients
exp(coef(mod1))
# Treating covariates as categorical variables
mod2 <- glm(data = clean_dt, flushot~as.factor(region) + as.factor(age) + as.factor(race)+
as.factor(education)+ as.factor(income) +as.factor(sex)+ as.factor(marital_status)+
as.factor(health_status)+as.factor(insurance) + as.factor(mul_doc) +as.factor(not_see_doc)+
as.factor(checkup) + as.factor(smoke) + as.factor(alcohol) + as.factor(urban_rural) +
as.factor(asthma_status))
summary(mod2)
pander(mod2)
exp(coef(mod2))
x <- clean_dt[, c("region", "age", "race", "education", "income", "sex",'marital_status',
"health_status", "insurance", "mul_doc", "not_see_doc",
"checkup", "smoke", "alcohol", "urban_rural", "asthma_status")]
y <- clean_dt$flushot
x <- data.matrix(clean_dt[, c("region", "age", "race", "education", "income", "sex",'marital_status',
"health_status", "insurance", "mul_doc", "not_see_doc",
"checkup", "smoke", "alcohol", "urban_rural", "asthma_status")])
#perform k-fold cross-validation to find optimal lambda value
cv_model <- cv.glmnet(x, y, alpha = 1)
#find optimal lambda value that minimizes test MSE
best_lambda <- cv_model$lambda.min
best_lambda
#produce plot of test MSE by lambda value
plot(cv_model)
#find coefficients of best model
best_model <- glmnet(x, y, alpha = 1, lambda = best_lambda)
coef(best_model)
